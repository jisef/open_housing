//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "roomphotos")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub roomphoto_pk: i32,
    pub room_fk: i32,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub photo: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::room::Entity",
        from = "Column::RoomFk",
        to = "super::room::Column::RoomPk",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Room,
}

impl Related<super::room::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Room.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
